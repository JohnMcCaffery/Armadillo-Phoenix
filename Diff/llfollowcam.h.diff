diff --git a/Source/indra/newview/llfollowcam.h b/Source/indra/newview/llfollowcam.h
index f4b7b27..0f638b7 100644
--- a/Source/indra/newview/llfollowcam.h
+++ b/Source/indra/newview/llfollowcam.h
@@ -92,6 +92,9 @@ public:
 	virtual bool		getUseFocus() const { return mUseFocus; }
 	virtual bool		getUsePosition() const { return mUsePosition; }
 
+	virtual void		interpolate();
+	virtual void		setWindow(LLVector3 position, LLVector3 positionDelta, LLVector3 lookAt, LLVector3 lookAtDelta, int tickLength);
+
 protected:
 	F32		mPositionLag;
 	F32		mFocusLag;
@@ -110,6 +113,14 @@ protected:
 	bool			mUseFocus; // specific focus point specified by script
 	LLVector3		mPosition;			// where the camera is (in world-space)
 	LLVector3		mFocus;				// what the camera is aimed at (in world-space)
+
+	U64				mLastUpdate;	//When the last updated was received
+	U32				mTickLength;	//How long between updates
+	U64				mThreshold;
+	LLVector3		mLastPosition; //The camera position last time it was set
+	LLVector3		mLastLookAt; //The camera look at last time it was set
+	LLVector3		mPositionDelta; //The change in camera position last time it was set
+	LLVector3		mLookAtDelta; //The change in camera look at last time it was set
 };
 
 class LLFollowCam : public LLFollowCamParams
@@ -183,6 +194,7 @@ protected:
 
 	bool mPitchSineAndCosineNeedToBeUpdated;
 
+
 	//------------------------------------------
 	// protected methods of FollowCam
 	//------------------------------------------
@@ -220,6 +232,9 @@ public:
 	static bool isScriptedCameraSource(const LLUUID& source);
 	static void dump();
 
+	static void updateScriptFollowCams();
+	static void	setWindow( const LLUUID& source, LLVector3 position, LLVector3 positionDelta, LLVector3 lookAt, LLVector3 lookAtDelta, int tickLength);
+	static void	removeScriptFollowCam( const LLUUID& source );
 protected:
 
 	typedef std::map<LLUUID, LLFollowCamParams*> param_map_t;
@@ -227,6 +242,7 @@ protected:
 
 	typedef std::vector<LLFollowCamParams*> param_stack_t;
 	static param_stack_t sParamStack;
+	static param_stack_t sScriptParamStack;
 };
 
 #endif //LL_FOLLOWCAM_H
