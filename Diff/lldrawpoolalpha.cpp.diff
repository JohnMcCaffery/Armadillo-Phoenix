diff --git a/Source/indra/newview/lldrawpoolalpha.cpp b/Source/indra/newview/lldrawpoolalpha.cpp
index 313b310..9232bda 100644
--- a/Source/indra/newview/lldrawpoolalpha.cpp
+++ b/Source/indra/newview/lldrawpoolalpha.cpp
@@ -100,11 +100,15 @@ void LLDrawPoolAlpha::renderDeferred(S32 pass)
 
 S32 LLDrawPoolAlpha::getNumPostDeferredPasses() 
 { 
+	static LLCachedControl<bool> RenderDepthOfField(gSavedSettings, "RenderDepthOfField"); // <FS:PP> Attempt to speed up things a little
 	if (LLPipeline::sImpostorRender)
 	{ //skip depth buffer filling pass when rendering impostors
 		return 1;
 	}
-	else if (gSavedSettings.getBOOL("RenderDepthOfField"))
+	// <FS:PP> Attempt to speed up things a little
+	// else if (gSavedSettings.getBOOL("RenderDepthOfField"))
+	else if (RenderDepthOfField)
+	// </FS:PP>
 	{
 		return 2; 
 	}
@@ -394,6 +398,17 @@ void LLDrawPoolAlpha::renderAlpha(U32 mask)
 		if (group->mSpatialPartition->mRenderByGroup &&
 		    !group->isDead())
 		{
+
+			// <FS:LO> Dont suspend partical processing while particles are hidden, just skip over drawing them
+			if(!(gPipeline.sRenderParticles) && (
+				group->mSpatialPartition->mPartitionType == LLViewerRegion::PARTITION_PARTICLE ||
+				group->mSpatialPartition->mPartitionType == LLViewerRegion::PARTITION_HUD_PARTICLE))
+			{
+				continue;
+			}
+			// </FS:LO>
+
+
 			bool draw_glow_for_this_partition = mVertexShaderLevel > 0 && // no shaders = no glow.
 				// All particle systems seem to come off the wire with texture entries which claim that they glow.  This is probably a bug in the data.  Suppress.
 				group->mSpatialPartition->mPartitionType != LLViewerRegion::PARTITION_PARTICLE &&
