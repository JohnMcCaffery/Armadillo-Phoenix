diff --git a/Source/indra/newview/lllocalbitmaps.cpp b/Source/indra/newview/lllocalbitmaps.cpp
index 9488bc3..286b519 100644
--- a/Source/indra/newview/lllocalbitmaps.cpp
+++ b/Source/indra/newview/lllocalbitmaps.cpp
@@ -32,9 +32,7 @@
 #include "lllocalbitmaps.h"
 
 /* boost: will not compile unless equivalent is undef'd, beware. */
-#ifdef equivalent
-#undef equivalent
-#endif 
+#include "fix_macros.h"
 #include <boost/filesystem.hpp>
 
 /* image compression headers. */
@@ -55,7 +53,7 @@
 #include "llviewerobject.h"
 #include "llface.h"
 #include "llvoavatarself.h"
-#include "llwearable.h"
+#include "llviewerwearable.h"
 #include "llagentwearables.h"
 #include "lltexlayerparams.h"
 #include "llvovolume.h"
@@ -182,8 +180,7 @@ bool LLLocalBitmap::updateSelf(EUpdateType optional_firstupdate)
 
 			// const std::time_t temp_time = boost::filesystem::last_write_time(boost::filesystem::path(mFilename));
 
-			std::string ndConvertFilename( std::string const &aFilename ); // Function declaration, function is defined in llapr.cpp
-			std::string strFName = ndConvertFilename( mFilename );
+			std::string strFName = nd::aprhelper::ndConvertFilename( mFilename );
 			const std::time_t temp_time = boost::filesystem::last_write_time(boost::filesystem::path( strFName ) );
 
 			// </FS:ND>
@@ -207,7 +204,7 @@ bool LLLocalBitmap::updateSelf(EUpdateType optional_firstupdate)
 					mLastModified = new_last_modified;
 
 					LLPointer<LLViewerFetchedTexture> texture = new LLViewerFetchedTexture
-						("file://"+mFilename, mWorldID, LL_LOCAL_USE_MIPMAPS);
+						("file://"+mFilename, FTT_LOCAL_FILE, mWorldID, LL_LOCAL_USE_MIPMAPS);
 
 					texture->createGLTexture(LL_LOCAL_DISCARD_LEVEL, raw_image);
 					texture->setCachedRawImage(LL_LOCAL_DISCARD_LEVEL, raw_image);
@@ -449,8 +446,8 @@ void LLLocalBitmap::updateUserPrims(LLUUID old_id, LLUUID new_id)
 					LLFace* face = object->mDrawable->getFace(face_iter);
 					if (face && face->getTexture() && face->getTexture()->getID() == old_id)
 					{
-						object->setTEImage(face_iter, LLViewerTextureManager::getFetchedTexture
-							(new_id, TRUE, LLViewerTexture::BOOST_NONE, LLViewerTexture::LOD_TEXTURE));
+						object->setTEImage(face_iter, LLViewerTextureManager::getFetchedTexture(
+							new_id, FTT_DEFAULT, TRUE, LLGLTexture::BOOST_NONE, LLViewerTexture::LOD_TEXTURE));
 
 						update_obj = true;
 					}
@@ -493,7 +490,7 @@ void LLLocalBitmap::updateUserLayers(LLUUID old_id, LLUUID new_id, LLWearableTyp
 	U32 count = gAgentWearables.getWearableCount(type);
 	for(U32 wearable_iter = 0; wearable_iter < count; wearable_iter++)
 	{
-		LLWearable* wearable = gAgentWearables.getWearable(type, wearable_iter);
+		LLViewerWearable* wearable = gAgentWearables.getViewerWearable(type, wearable_iter);
 		if (wearable)
 		{
 			std::vector<LLLocalTextureObject*> texture_list = wearable->getLocalTextureListSeq();
@@ -505,11 +502,11 @@ void LLLocalBitmap::updateUserLayers(LLUUID old_id, LLUUID new_id, LLWearableTyp
 				if (lto && lto->getID() == old_id)
 				{
 					U32 local_texlayer_index = 0; /* can't keep that as static const, gives errors, so i'm leaving this var here */
-					LLVOAvatarDefines::EBakedTextureIndex baked_texind =
+					LLAvatarAppearanceDefines::EBakedTextureIndex baked_texind =
 						lto->getTexLayer(local_texlayer_index)->getTexLayerSet()->getBakedTexIndex();
 				
-					LLVOAvatarDefines::ETextureIndex reg_texind = getTexIndex(type, baked_texind);
-					if (reg_texind != LLVOAvatarDefines::TEX_NUM_INDICES)
+					LLAvatarAppearanceDefines::ETextureIndex reg_texind = getTexIndex(type, baked_texind);
+					if (reg_texind != LLAvatarAppearanceDefines::TEX_NUM_INDICES)
 					{
 						U32 index = gAgentWearables.getWearableIndex(wearable);
 						gAgentAvatarp->setLocalTexture(reg_texind, gTextureList.getImage(new_id), FALSE, index);
@@ -525,10 +522,10 @@ void LLLocalBitmap::updateUserLayers(LLUUID old_id, LLUUID new_id, LLWearableTyp
 	}
 }
 
-LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
-	LLWearableType::EType type, LLVOAvatarDefines::EBakedTextureIndex baked_texind)
+LLAvatarAppearanceDefines::ETextureIndex LLLocalBitmap::getTexIndex(
+	LLWearableType::EType type, LLAvatarAppearanceDefines::EBakedTextureIndex baked_texind)
 {
-	LLVOAvatarDefines::ETextureIndex result = LLVOAvatarDefines::TEX_NUM_INDICES; // using as a default/fail return.
+	LLAvatarAppearanceDefines::ETextureIndex result = LLAvatarAppearanceDefines::TEX_NUM_INDICES; // using as a default/fail return.
 
 	switch(type)
 	{
@@ -536,32 +533,32 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 		{
 			switch(baked_texind)
 			{
-				case LLVOAvatarDefines::BAKED_EYES:
+				case LLAvatarAppearanceDefines::BAKED_EYES:
 				{
-					result = LLVOAvatarDefines::TEX_EYES_ALPHA;
+					result = LLAvatarAppearanceDefines::TEX_EYES_ALPHA;
 					break;
 				}
 
-				case LLVOAvatarDefines::BAKED_HAIR:
+				case LLAvatarAppearanceDefines::BAKED_HAIR:
 				{
-					result = LLVOAvatarDefines::TEX_HAIR_ALPHA;
+					result = LLAvatarAppearanceDefines::TEX_HAIR_ALPHA;
 					break;
 				}
 
-				case LLVOAvatarDefines::BAKED_HEAD:
+				case LLAvatarAppearanceDefines::BAKED_HEAD:
 				{
-					result = LLVOAvatarDefines::TEX_HEAD_ALPHA;
+					result = LLAvatarAppearanceDefines::TEX_HEAD_ALPHA;
 					break;
 				}
 
-				case LLVOAvatarDefines::BAKED_LOWER:
+				case LLAvatarAppearanceDefines::BAKED_LOWER:
 				{
-					result = LLVOAvatarDefines::TEX_LOWER_ALPHA;
+					result = LLAvatarAppearanceDefines::TEX_LOWER_ALPHA;
 					break;
 				}
-				case LLVOAvatarDefines::BAKED_UPPER:
+				case LLAvatarAppearanceDefines::BAKED_UPPER:
 				{
-					result = LLVOAvatarDefines::TEX_UPPER_ALPHA;
+					result = LLAvatarAppearanceDefines::TEX_UPPER_ALPHA;
 					break;
 				}
 
@@ -577,9 +574,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_EYES:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_EYES)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_EYES)
 			{
-				result = LLVOAvatarDefines::TEX_EYES_IRIS;
+				result = LLAvatarAppearanceDefines::TEX_EYES_IRIS;
 			}
 
 			break;
@@ -587,9 +584,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_GLOVES:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_UPPER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_UPPER)
 			{
-				result = LLVOAvatarDefines::TEX_UPPER_GLOVES;
+				result = LLAvatarAppearanceDefines::TEX_UPPER_GLOVES;
 			}
 
 			break;
@@ -597,13 +594,13 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_JACKET:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_LOWER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_LOWER)
 			{
-				result = LLVOAvatarDefines::TEX_LOWER_JACKET;
+				result = LLAvatarAppearanceDefines::TEX_LOWER_JACKET;
 			}
-			else if (baked_texind == LLVOAvatarDefines::BAKED_UPPER)
+			else if (baked_texind == LLAvatarAppearanceDefines::BAKED_UPPER)
 			{
-				result = LLVOAvatarDefines::TEX_UPPER_JACKET;
+				result = LLAvatarAppearanceDefines::TEX_UPPER_JACKET;
 			}
 
 			break;
@@ -611,9 +608,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_PANTS:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_LOWER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_LOWER)
 			{
-				result = LLVOAvatarDefines::TEX_LOWER_PANTS;
+				result = LLAvatarAppearanceDefines::TEX_LOWER_PANTS;
 			}
 
 			break;
@@ -621,9 +618,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_SHIRT:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_UPPER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_UPPER)
 			{
-				result = LLVOAvatarDefines::TEX_UPPER_SHIRT;
+				result = LLAvatarAppearanceDefines::TEX_UPPER_SHIRT;
 			}
 
 			break;
@@ -631,9 +628,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_SHOES:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_LOWER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_LOWER)
 			{
-				result = LLVOAvatarDefines::TEX_LOWER_SHOES;
+				result = LLAvatarAppearanceDefines::TEX_LOWER_SHOES;
 			}
 
 			break;
@@ -643,20 +640,20 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 		{
 			switch(baked_texind)
 			{
-				case LLVOAvatarDefines::BAKED_HEAD:
+				case LLAvatarAppearanceDefines::BAKED_HEAD:
 				{
-					result = LLVOAvatarDefines::TEX_HEAD_BODYPAINT;
+					result = LLAvatarAppearanceDefines::TEX_HEAD_BODYPAINT;
 					break;
 				}
 
-				case LLVOAvatarDefines::BAKED_LOWER:
+				case LLAvatarAppearanceDefines::BAKED_LOWER:
 				{
-					result = LLVOAvatarDefines::TEX_LOWER_BODYPAINT;
+					result = LLAvatarAppearanceDefines::TEX_LOWER_BODYPAINT;
 					break;
 				}
-				case LLVOAvatarDefines::BAKED_UPPER:
+				case LLAvatarAppearanceDefines::BAKED_UPPER:
 				{
-					result = LLVOAvatarDefines::TEX_UPPER_BODYPAINT;
+					result = LLAvatarAppearanceDefines::TEX_UPPER_BODYPAINT;
 					break;
 				}
 
@@ -671,9 +668,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_SKIRT:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_SKIRT)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_SKIRT)
 			{
-				result = LLVOAvatarDefines::TEX_SKIRT;
+				result = LLAvatarAppearanceDefines::TEX_SKIRT;
 			}
 
 			break;
@@ -681,9 +678,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_SOCKS:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_LOWER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_LOWER)
 			{
-				result = LLVOAvatarDefines::TEX_LOWER_SOCKS;
+				result = LLAvatarAppearanceDefines::TEX_LOWER_SOCKS;
 			}
 
 			break;
@@ -693,20 +690,20 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 		{
 			switch(baked_texind)
 			{
-				case LLVOAvatarDefines::BAKED_HEAD:
+				case LLAvatarAppearanceDefines::BAKED_HEAD:
 				{
-					result = LLVOAvatarDefines::TEX_HEAD_TATTOO;
+					result = LLAvatarAppearanceDefines::TEX_HEAD_TATTOO;
 					break;
 				}
 
-				case LLVOAvatarDefines::BAKED_LOWER:
+				case LLAvatarAppearanceDefines::BAKED_LOWER:
 				{
-					result = LLVOAvatarDefines::TEX_LOWER_TATTOO;
+					result = LLAvatarAppearanceDefines::TEX_LOWER_TATTOO;
 					break;
 				}
-				case LLVOAvatarDefines::BAKED_UPPER:
+				case LLAvatarAppearanceDefines::BAKED_UPPER:
 				{
-					result = LLVOAvatarDefines::TEX_UPPER_TATTOO;
+					result = LLAvatarAppearanceDefines::TEX_UPPER_TATTOO;
 					break;
 				}
 
@@ -721,9 +718,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_UNDERPANTS:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_LOWER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_LOWER)
 			{
-				result = LLVOAvatarDefines::TEX_LOWER_UNDERPANTS;
+				result = LLAvatarAppearanceDefines::TEX_LOWER_UNDERPANTS;
 			}
 
 			break;
@@ -731,9 +728,9 @@ LLVOAvatarDefines::ETextureIndex LLLocalBitmap::getTexIndex(
 
 		case LLWearableType::WT_UNDERSHIRT:
 		{
-			if (baked_texind == LLVOAvatarDefines::BAKED_UPPER)
+			if (baked_texind == LLAvatarAppearanceDefines::BAKED_UPPER)
 			{
-				result = LLVOAvatarDefines::TEX_UPPER_UNDERSHIRT;
+				result = LLAvatarAppearanceDefines::TEX_UPPER_UNDERSHIRT;
 			}
 
 			break;
