diff --git a/Source/indra/newview/fspanelclassified.cpp b/Source/indra/newview/fspanelclassified.cpp
index 7ebe8d1..3c57f70 100644
--- a/Source/indra/newview/fspanelclassified.cpp
+++ b/Source/indra/newview/fspanelclassified.cpp
@@ -55,6 +55,11 @@
 #include "lltrans.h"
 #include "llscrollcontainer.h"
 #include "llstatusbar.h"
+#include "llviewertexture.h"
+
+#ifdef OPENSIM
+#include "llviewernetwork.h"
+#endif // OPENSIM
 
 const S32 MINIMUM_PRICE_FOR_LISTING = 50;	// L$
 
@@ -843,10 +848,29 @@ void FSPanelClassifiedEdit::resetControls()
 	getChild<LLComboBox>("category")->setCurrentByIndex(0);
 	getChild<LLComboBox>("content_type")->setCurrentByIndex(0);
 	getChild<LLUICtrl>("auto_renew")->setValue(false);
-	getChild<LLUICtrl>("price_for_listing")->setValue(MINIMUM_PRICE_FOR_LISTING);
+// <FS:CR> FIRE-9814 - Don't hardcode a classified listing fee
+	//getChild<LLUICtrl>("price_for_listing")->setValue(MINIMUM_PRICE_FOR_LISTING);
+	getChild<LLUICtrl>("price_for_listing")->setValue(getClassifiedFee());
+// </FS:CR>
 	getChildView("price_for_listing")->setEnabled(TRUE);
 }
 
+// <FS:CR> FIRE-9814 - Don't hardcode a classified listing fee
+S32 FSPanelClassifiedEdit::getClassifiedFee()
+{
+	S32 fee = MINIMUM_PRICE_FOR_LISTING;
+#ifdef OPENSIM
+	if (LLGridManager::getInstance()->isInOpenSim())
+	{
+		LLSD grid_info;
+		LLGridManager::getInstance()->getGridData(grid_info);
+		fee = grid_info[GRID_CLASSIFIED_FEE].asInteger();
+	}
+#endif // OPENSIM
+	return fee;
+}
+// </FS:CR>
+
 bool FSPanelClassifiedEdit::canClose()
 {
 	return mCanClose;
