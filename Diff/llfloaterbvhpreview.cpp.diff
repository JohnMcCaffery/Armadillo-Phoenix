diff --git a/Source/indra/newview/llfloaterbvhpreview.cpp b/Source/indra/newview/llfloaterbvhpreview.cpp
index 3cf09e5..e1e4ee4 100644
--- a/Source/indra/newview/llfloaterbvhpreview.cpp
+++ b/Source/indra/newview/llfloaterbvhpreview.cpp
@@ -219,6 +219,16 @@ BOOL LLFloaterBvhPreview::postBuild()
 	
 	mStopButton = getChild<LLButton>( "stop_btn");
 	mStopButton->setClickedCallback(boost::bind(&LLFloaterBvhPreview::onBtnStop, this));
+	
+// <FS:CR> Allow Higher priority animations to be uploaded
+	LLSpinCtrl* spinner = getChild<LLSpinCtrl>("priority");
+	U32 max_value = gSavedSettings.getU32("FSMaxAnimationPriority");
+	// Never allow a higher priority than 7 because that's ridiculous.
+	if (max_value > 7) max_value = 7;
+	// Also, disallow setting to 0 because that's stupidness.
+	if (max_value < 1) max_value = 1;
+	spinner->setMaxValue(max_value);
+// </FS:CR>
 
 	loadBVH();
 
@@ -460,21 +470,13 @@ void LLFloaterBvhPreview::resetMotion()
 	LLVOAvatar* avatarp = mAnimPreview->getPreviewAvatar();
 	BOOL paused = avatarp->areAnimationsPaused();
 
-	// <FS:ND> Fix awful cast
-
-	// *TODO: Fix awful casting hack
-	//	LLKeyframeMotion* motionp = (LLKeyframeMotion*)avatarp->findMotion(mMotionID);
 	LLKeyframeMotion* motionp = dynamic_cast<LLKeyframeMotion*>(avatarp->findMotion(mMotionID));
-
-	// </FS:ND>
-	
-	// <FS:ND> FIRE-7366; Crashfix if motionp is 0
 	if( motionp )
 	{
 		// Set emotion
 		std::string emote = getChild<LLUICtrl>("emote_combo")->getValue().asString();
 		motionp->setEmote(mIDList[emote]);
-	} // </FS:ND>
+	}
 
 	LLUUID base_id = mIDList[getChild<LLUICtrl>("preview_base_anim")->getValue().asString()];
 	avatarp->deactivateAllMotions();
@@ -486,9 +488,11 @@ void LLFloaterBvhPreview::resetMotion()
 	std::string handpose = getChild<LLUICtrl>("hand_pose_combo")->getValue().asString();
 	avatarp->startMotion( ANIM_AGENT_HAND_MOTION, 0.0f );
 
-	if( motionp ) // <FS:ND> FIRE-7366; Crashfix if motionp is 0
+	if( motionp )
+	{
 		motionp->setHandPose(LLHandMotion::getHandPose(handpose));
-
+	}
+	
 	if (paused)
 	{
 		mPauseRequest = avatarp->requestPause();
@@ -1164,12 +1168,12 @@ BOOL	LLPreviewAnimation::render()
 
 	gGL.flush();
 
-	LLVector3 target_pos = avatarp->mRoot.getWorldPosition();
+	LLVector3 target_pos = avatarp->mRoot->getWorldPosition();
 
 	LLQuaternion camera_rot = LLQuaternion(mCameraPitch, LLVector3::y_axis) * 
 		LLQuaternion(mCameraYaw, LLVector3::z_axis);
 
-	LLQuaternion av_rot = avatarp->mRoot.getWorldRotation() * camera_rot;
+	LLQuaternion av_rot = avatarp->mRoot->getWorldRotation() * camera_rot;
 	LLViewerCamera::getInstance()->setOriginAndLookAt(
 		target_pos + ((LLVector3(mCameraDistance, 0.f, 0.f) + mCameraOffset) * av_rot),		// camera
 		LLVector3::z_axis,																	// up
