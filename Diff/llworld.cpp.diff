diff --git a/Source/indra/newview/llworld.cpp b/Source/indra/newview/llworld.cpp
index 0a9099d..5c8de9b 100644
--- a/Source/indra/newview/llworld.cpp
+++ b/Source/indra/newview/llworld.cpp
@@ -66,6 +66,7 @@
 #include <map>
 #include <cstring>
 
+#include "fscommon.h"
 
 //
 // Globals
@@ -122,10 +123,6 @@ LLWorld::LLWorld() :
 	mDefaultWaterTexturep = LLViewerTextureManager::getLocalTexture(raw.get(), FALSE);
 	gGL.getTexUnit(0)->bind(mDefaultWaterTexturep);
 	mDefaultWaterTexturep->setAddressMode(LLTexUnit::TAM_CLAMP);
-
-// <FS:CR> Aurora Sim>
-	refreshLimits();
-// </FS:CR> Aurora Sim>
 }
 
 
@@ -159,7 +156,7 @@ void LLWorld::refreshLimits()
 	}
 
 	mLimitsNeedRefresh = false;
-#ifdef HAS_OPENSIM_SUPPORT // <FS:AW optional opensim support>
+#ifdef OPENSIM // <FS:AW optional opensim support>
 	if(LLGridManager::getInstance()->isInOpenSim())
 	{
 		//llmath/xform.h
@@ -203,7 +200,7 @@ void LLWorld::refreshLimits()
 // </FS:CR> Aurora Sim
 	}
 	else
-#endif // HAS_OPENSIM_SUPPORT // <FS:AW optional opensim support>
+#endif // OPENSIM // <FS:AW optional opensim support>
 	{
 		//llmath/xform.h
 		mRegionMaxHeight = SL_MAX_OBJECT_Z;
@@ -547,7 +544,6 @@ LLViewerRegion* LLWorld::addRegion(const U64 &region_handle, const LLHost &host,
 	}
 // </AW: opensim-limits>
 
-	LLMemType mt(LLMemType::MTYPE_REGIONS);
 	llinfos << "Add region with handle: " << region_handle << " on host " << host << llendl;
 	LLViewerRegion *regionp = getRegionFromHandle(region_handle);
 	if (regionp)
@@ -664,7 +660,7 @@ LLViewerRegion* LLWorld::addRegion(const U64 &region_handle, const LLHost &host,
 
 			if(dir == NORTH || dir == SOUTH) adj_x += WORLD_PATCH_SIZE;
 			if(dir == EAST || dir == WEST) adj_y += WORLD_PATCH_SIZE;
-// <FS:CR> Aurora Sim
+// </FS:CR> Aurora Sim
 		}
 	}
 
@@ -1108,7 +1104,6 @@ void LLWorld::updateVisibilities()
 
 void LLWorld::updateRegions(F32 max_update_time)
 {
-	LLMemType mt_ur(LLMemType::MTYPE_IDLE_UPDATE_REGIONS);
 	LLTimer update_timer;
 	BOOL did_one = FALSE;
 	
@@ -1366,11 +1361,11 @@ void LLWorld::updateWaterObjects()
 // <FS:CR> Fix water height on regions larger than 2048x2048
 		//512 - (max_x - region_x),
 		//512 - (max_y - region_y),
-		512 - (max_x - (rwidth - 256) - region_x),
-		512 - (max_y - (rwidth - 256) - region_y),
+		(S32)(512 - (max_x - (rwidth - 256) - region_x)),
+		(S32)(512 - (max_y - (rwidth - 256) - region_y)),
+		(S32)(512 - (region_x - min_x)),
+		(S32)(512 - (region_y - min_y)) };
 // </FS:CR> Fix water height on regions larger than 2048x2048
-		512 - (region_x - min_x),
-		512 - (region_y - min_y) };
 		
 	S32 dir;
 	for (dir = 0; dir < 8; dir++)
@@ -1707,7 +1702,7 @@ void LLWorld::getAvatars(uuid_vec_t* avatar_ids, std::vector<LLVector3d>* positi
 	{
 		LLVOAvatar* pVOAvatar = (LLVOAvatar*) *iter;
 
-		if (!pVOAvatar->isDead() && !pVOAvatar->isSelf())
+		if (!pVOAvatar->isDead() && !pVOAvatar->isSelf() && !pVOAvatar->mIsDummy)
 		{
 			LLVector3d pos_global = pVOAvatar->getPositionGlobal();
 			LLUUID uuid = pVOAvatar->getID();
