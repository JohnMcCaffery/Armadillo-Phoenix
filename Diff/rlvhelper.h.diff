diff --git a/Source/indra/newview/rlvhelper.h b/Source/indra/newview/rlvhelper.h
index 2cf44f3..31d4898 100644
--- a/Source/indra/newview/rlvhelper.h
+++ b/Source/indra/newview/rlvhelper.h
@@ -1,5 +1,5 @@
 /** 
- *
+ * @file rlvhelper.cpp
  * Copyright (c) 2009-2011, Kitty Barnett
  * 
  * The source code in this file is provided to you under the terms of the 
@@ -239,9 +239,9 @@ public:
 	void forceDetach(const LLViewerJointAttachment* ptAttachPt);
 
 	// Wearables
-	static bool isForceRemovable(const LLWearable* pWearable, bool fCheckComposite = true, const LLUUID& idExcept = LLUUID::null);
+	static bool isForceRemovable(const LLViewerWearable* pWearable, bool fCheckComposite = true, const LLUUID& idExcept = LLUUID::null);
 	static bool isForceRemovable(LLWearableType::EType wtType, bool fCheckComposite = true, const LLUUID& idExcept = LLUUID::null);
-	void forceRemove(const LLWearable* pWearable);
+	void forceRemove(const LLViewerWearable* pWearable);
 	void forceRemove(LLWearableType::EType wtType);
 
 public:
@@ -250,7 +250,7 @@ protected:
 	void addAttachment(const LLViewerInventoryItem* pItem, EWearAction eAction);
 	void remAttachment(const LLViewerObject* pAttachObj);
 	void addWearable(const LLViewerInventoryItem* pItem, EWearAction eAction);
-	void remWearable(const LLWearable* pWearable);
+	void remWearable(const LLViewerWearable* pWearable);
 
 	// Convenience (prevents long lines that run off the screen elsewhere)
 	bool isAddAttachment(const LLViewerInventoryItem* pItem) const
@@ -279,7 +279,7 @@ protected:
 		}
 		return fFound;
 	}
-	bool isRemWearable(const LLWearable* pWearable) const
+	bool isRemWearable(const LLViewerWearable* pWearable) const
 	{
 		return std::find(m_remWearables.begin(), m_remWearables.end(), pWearable) != m_remWearables.end();
 	}
@@ -292,8 +292,8 @@ protected:
 	typedef std::map<S32, LLInventoryModel::item_array_t> addattachments_map_t;
 	addattachments_map_t             m_addAttachments;
 	LLInventoryModel::item_array_t   m_addGestures;
-	std::list<const LLViewerObject*> m_remAttachments;
-	std::list<const LLWearable*>     m_remWearables;
+	std::vector<LLViewerObject*>     m_remAttachments;	// This should match the definition of LLAgentWearables::llvo_vec_t
+	std::list<const LLViewerWearable*> m_remWearables;
 	LLInventoryModel::item_array_t   m_remGestures;
 
 private:
