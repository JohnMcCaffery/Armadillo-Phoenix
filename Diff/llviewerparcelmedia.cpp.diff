diff --git a/Source/indra/newview/llviewerparcelmedia.cpp b/Source/indra/newview/llviewerparcelmedia.cpp
index 212eb9f..f897db5 100644
--- a/Source/indra/newview/llviewerparcelmedia.cpp
+++ b/Source/indra/newview/llviewerparcelmedia.cpp
@@ -42,7 +42,6 @@
 #include "llviewerparcelmediaautoplay.h"
 #include "llnotifications.h"
 #include "llnotificationsutil.h"
-#include "llnotificationmanager.h"
 //#include "llfirstuse.h"
 #include "llpluginclassmedia.h"
 #include "llviewertexture.h"
@@ -50,6 +49,7 @@
 
 #include "lltrans.h"
 #include "llvieweraudio.h"
+#include "fscommon.h"	// <FS:CR> For media filter reportToNearbyChat
 
 // Static Variables
 
@@ -129,7 +129,6 @@ void LLViewerParcelMedia::update(LLParcel* parcel)
 			}
 
 			// we're in a parcel
-			bool new_parcel = false;
 			S32 parcelid = parcel->getLocalID();						
 
 			LLUUID regionid = gAgent.getRegion()->getRegionID();
@@ -138,7 +137,6 @@ void LLViewerParcelMedia::update(LLParcel* parcel)
 				LL_DEBUGS("Media") << "New parcel, parcel id = " << parcelid << ", region id = " << regionid << LL_ENDL;
 				sMediaParcelLocalID = parcelid;
 				sMediaRegionID = regionid;
-				new_parcel = true;
 			}
 
 			std::string mediaUrl = std::string ( parcel->getMediaURL () );
@@ -926,12 +924,7 @@ void LLViewerParcelMedia::filterMediaUrl(LLParcel* parcel)
 	{
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		LLChat chat;
-		chat.mText = LLTrans::getString("MediaFilterMediaContentBlocked", format_args);;
-		chat.mSourceType = CHAT_SOURCE_SYSTEM;
-		LLSD args;
-		args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterMediaContentBlocked", format_args));
 		sMediaLastActionPlay = false;
 	}
 	else
@@ -986,12 +979,6 @@ void callback_media_alert2(const LLSD &notification, const LLSD &response, LLPar
 	std::string media_url = parcel->getMediaURL();
 	std::string domain = LLViewerParcelMedia::extractDomain(media_url);
 
-	LLChat chat;
-	chat.mSourceType = CHAT_SOURCE_SYSTEM;
-	LLSD args;
-	args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-	LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
-
 	LLViewerParcelMedia::sMediaLastActionPlay = false;
 	if ((option == 0) && allow) //allow now
 	{
@@ -1011,8 +998,7 @@ void callback_media_alert2(const LLSD &notification, const LLSD &response, LLPar
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterMediaContentDomainAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterMediaContentDomainAlwaysAllowed", format_args));
 		LLViewerParcelMedia::sCurrentMedia = *parcel;
 		if (parcel->getName() == currentparcel->getName())
 		{
@@ -1029,8 +1015,7 @@ void callback_media_alert2(const LLSD &notification, const LLSD &response, LLPar
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterMediaContentDomainAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterMediaContentDomainAlwaysBlocked", format_args));
 	}
 	else if ((option == 2) && allow) // Whitelist URL
 	{
@@ -1041,8 +1026,7 @@ void callback_media_alert2(const LLSD &notification, const LLSD &response, LLPar
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterMediaContentUrlAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterMediaContentUrlAlwaysAllowed", format_args));
 		LLViewerParcelMedia::sCurrentMedia = *parcel;
 		if (parcel->getName() == currentparcel->getName())
 		{
@@ -1059,8 +1043,7 @@ void callback_media_alert2(const LLSD &notification, const LLSD &response, LLPar
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterMediaContentUrlAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterMediaContentUrlAlwaysBlocked", format_args));
 	}
 
 	// We've dealt with the alert, so mark it as inactive.
@@ -1258,12 +1241,7 @@ void LLViewerParcelMedia::filterAudioUrl(std::string media_url)
 	{
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		LLChat chat;
-		chat.mText = LLTrans::getString("MediaFilterAudioContentBlocked", format_args);
-		chat.mSourceType = CHAT_SOURCE_SYSTEM;
-		LLSD args;
-		args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterAudioContentBlocked", format_args));
 		LLViewerAudio::getInstance()->stopInternetStreamWithAutoFade();
 		sAudioLastActionPlay = false;
 	}
@@ -1312,11 +1290,6 @@ void callback_audio_alert2(const LLSD &notification, const LLSD &response, std::
 	S32 option = LLNotificationsUtil::getSelectedOption(notification, response);
 	std::string domain = LLViewerParcelMedia::extractDomain(media_url);
 
-	LLChat chat;
-	chat.mSourceType = CHAT_SOURCE_SYSTEM;
-	LLSD args;
-	args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-
 	if ((option== 0) && allow) // allow now
 	{
 		if (gAudiop != NULL)
@@ -1344,8 +1317,7 @@ void callback_audio_alert2(const LLSD &notification, const LLSD &response, std::
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterAudioContentDomainAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterAudioContentDomainAlwaysAllowed", format_args));
 		if (gAudiop != NULL)
 		{
 			LLViewerParcelMedia::sCurrentMusic = media_url;
@@ -1362,8 +1334,7 @@ void callback_audio_alert2(const LLSD &notification, const LLSD &response, std::
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterAudioContentDomainAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterAudioContentDomainAlwaysBlocked", format_args));
 		if (gAudiop != NULL)
 		{
 			LLViewerParcelMedia::sCurrentMusic = "";
@@ -1380,8 +1351,7 @@ void callback_audio_alert2(const LLSD &notification, const LLSD &response, std::
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterAudioContentUrlAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterAudioContentUrlAlwaysAllowed", format_args));
 		if (gAudiop != NULL)
 		{
 			LLViewerParcelMedia::sCurrentMusic = media_url;
@@ -1398,8 +1368,7 @@ void callback_audio_alert2(const LLSD &notification, const LLSD &response, std::
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterAudioContentUrlAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterAudioContentUrlAlwaysBlocked", format_args));
 		if (gAudiop != NULL)
 		{
 			LLViewerParcelMedia::sCurrentMusic = "";
@@ -1590,13 +1559,7 @@ void LLViewerParcelMedia::filterMOAPUrl(LLMediaDataClientObject *object, LLObjec
 	{
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		LLChat chat;
-		chat.mText = LLTrans::getString("MediaFilterSharedMediaContentBlocked", domain);
-		chat.mSourceType = CHAT_SOURCE_SYSTEM;
-		LLSD args;
-		args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
-		//LLOverlayBar::audioFilterStop();
+		reportToNearbyChat(LLTrans::getString("MediaFilterSharedMediaContentBlocked", domain));
 		sAudioLastActionPlay = false;
 	}
 	else
@@ -1650,11 +1613,6 @@ void callback_MOAP_alert2(const LLSD &notification, const LLSD &response, LLMedi
 	S32 option = LLNotificationsUtil::getSelectedOption(notification, response);
 	std::string domain = LLViewerParcelMedia::extractDomain(media_url);
 
-	LLChat chat;
-	chat.mSourceType = CHAT_SOURCE_SYSTEM;
-	LLSD args;
-	args["type"] = LLNotificationsUI::NT_NEARBYCHAT;
-
 	if ((option== 0) && allow) // allow now
 	{
 		nav_object->doNavigate(object, texture_index, media_url);
@@ -1675,8 +1633,7 @@ void callback_MOAP_alert2(const LLSD &notification, const LLSD &response, LLMedi
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterSharedMediaContentDomainAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterSharedMediaContentDomainAlwaysAllowed", format_args));
 		nav_object->doNavigate(object, texture_index, media_url);
 		LLViewerParcelMedia::sCurrentMOAP = media_url;
 		LLViewerParcelMedia::sMOAPLastActionPlay = true;
@@ -1690,8 +1647,7 @@ void callback_MOAP_alert2(const LLSD &notification, const LLSD &response, LLMedi
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[DOMAIN]"] = domain;
-		chat.mText = LLTrans::getString("MediaFilterSharedMediaContentDomainAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterSharedMediaContentDomainAlwaysBlocked", format_args));
 		LLViewerParcelMedia::sCurrentMOAP = "";
 		LLViewerParcelMedia::sMOAPLastActionPlay = false;
 	}
@@ -1704,8 +1660,7 @@ void callback_MOAP_alert2(const LLSD &notification, const LLSD &response, LLMedi
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterSharedMediaContentUrlAlwaysAllowed", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterSharedMediaContentUrlAlwaysAllowed", format_args));
 		nav_object->doNavigate(object, texture_index, media_url);
 		LLViewerParcelMedia::sCurrentMOAP = media_url;
 		LLViewerParcelMedia::sMOAPLastActionPlay = true;
@@ -1719,8 +1674,7 @@ void callback_MOAP_alert2(const LLSD &notification, const LLSD &response, LLMedi
 		LLViewerParcelMedia::saveDomainFilterList();
 		LLStringUtil::format_map_t format_args;
 		format_args["[MEDIAURL]"] = media_url;
-		chat.mText = LLTrans::getString("MediaFilterSharedMediaContentUrlAlwaysBlocked", format_args);
-		LLNotificationsUI::LLNotificationManager::instance().onChat(chat, args);
+		reportToNearbyChat(LLTrans::getString("MediaFilterSharedMediaContentUrlAlwaysBlocked", format_args));
 		LLViewerParcelMedia::sCurrentMOAP = "";
 		LLViewerParcelMedia::sMOAPLastActionPlay = false;
 	}
