diff --git a/Source/indra/newview/llchiclet.cpp b/Source/indra/newview/llchiclet.cpp
index a661808..57218f7 100644
--- a/Source/indra/newview/llchiclet.cpp
+++ b/Source/indra/newview/llchiclet.cpp
@@ -33,7 +33,10 @@
 #include "lleventtimer.h"
 #include "llgroupactions.h"
 #include "lliconctrl.h"
-#include "llimfloater.h"
+// <FS:Ansariel> [FS communication UI]
+//#include "llimfloater.h"
+#include "fsfloaterim.h"
+// </FS:Ansariel> [FS communication UI]
 #include "llimview.h"
 #include "llfloaterreg.h"
 #include "lllocalcliprect.h"
@@ -311,8 +314,12 @@ void LLIMWellChiclet::messageCountChanged(const LLSD& session_data)
 
 	const LLUUID& session_id = session_data["session_id"];
 	const S32 counter = LLChicletBar::getInstance()->getTotalUnreadIMCount();
-	const bool im_not_visible = !LLFloaterReg::instanceVisible("im_container")
-		&& !LLFloaterReg::instanceVisible("impanel", session_id);
+	// <FS:Ansariel> [FS communication UI]
+	//const bool im_not_visible = !LLFloaterReg::instanceVisible("im_container")
+	//	&& !LLFloaterReg::instanceVisible("impanel", session_id);
+	const bool im_not_visible = !LLFloaterReg::instanceVisible("fs_im_container")
+		&& !LLFloaterReg::instanceVisible("fs_impanel", session_id);
+	// </FS:Ansariel> [FS communication UI]
 
 	setNewMessagesState(counter > mCounter	&& im_not_visible);
 
@@ -607,7 +614,10 @@ bool LLIMChiclet::getShowNewMessagesIcon()
 
 void LLIMChiclet::onMouseDown()
 {
-	LLIMFloater::toggle(getSessionId());
+	// <FS:Ansariel> [FS communication UI]
+	//LLIMFloater::toggle(getSessionId());
+	FSFloaterIM::toggle(getSessionId());
+	// </FS:Ansariel> [FS communication UI]
 	setCounter(0);
 }
 
@@ -756,7 +766,10 @@ void LLIMP2PChiclet::updateMenuItems()
 	if(getSessionId().isNull())
 		return;
 
-	LLIMFloater* open_im_floater = LLIMFloater::findInstance(getSessionId());
+	// <FS:Ansariel> [FS communication UI]
+	//LLIMFloater* open_im_floater = LLIMFloater::findInstance(getSessionId());
+	FSFloaterIM* open_im_floater = FSFloaterIM::findInstance(getSessionId());
+	// </FS:Ansariel> [FS communication UI]
 	bool open_window_exists = open_im_floater && open_im_floater->getVisible();
 	mPopupMenu->getChild<LLUICtrl>("Send IM")->setEnabled(!open_window_exists);
 	
@@ -1032,7 +1045,10 @@ void LLIMGroupChiclet::updateMenuItems()
 	if(getSessionId().isNull())
 		return;
 
-	LLIMFloater* open_im_floater = LLIMFloater::findInstance(getSessionId());
+	// <FS:Ansariel> [FS communication UI]
+	//LLIMFloater* open_im_floater = LLIMFloater::findInstance(getSessionId());
+	FSFloaterIM* open_im_floater = FSFloaterIM::findInstance(getSessionId());
+	// </FS:Ansariel> [FS communication UI]
 	bool open_window_exists = open_im_floater && open_im_floater->getVisible();
 	mPopupMenu->getChild<LLUICtrl>("Chat")->setEnabled(!open_window_exists);
 }
@@ -1118,7 +1134,10 @@ void LLChicletPanel::onMessageCountChanged(const LLSD& data)
 	LLUUID session_id = data["session_id"].asUUID();
 	S32 unread = data["participant_unread"].asInteger();
 
-	LLIMFloater* im_floater = LLIMFloater::findInstance(session_id);
+	// <FS:Ansariel> [FS communication UI]
+	//LLIMFloater* im_floater = LLIMFloater::findInstance(session_id);
+	FSFloaterIM* im_floater = FSFloaterIM::findInstance(session_id);
+	// </FS:Ansariel> [FS communication UI]
 	if (im_floater && im_floater->getVisible() && im_floater->hasFocus())
 	{
 		unread = 0;
@@ -1199,7 +1218,10 @@ void LLChicletPanel::onCurrentVoiceChannelChanged(const LLUUID& session_id)
 			chiclet->setShowSpeaker(true);
 			if (gSavedSettings.getBOOL("OpenIMOnVoice"))
 			{
-				LLIMFloater::show(chiclet->getSessionId());
+				// <FS:Ansariel> [FS communication UI]
+				//LLIMFloater::show(chiclet->getSessionId());
+				FSFloaterIM::show(chiclet->getSessionId());
+				// </FS:Ansariel> [FS communication UI]
 			}
 		}
 	}
@@ -1690,8 +1712,12 @@ bool LLChicletPanel::isAnyIMFloaterDoked()
 	for (chiclet_list_t::iterator it = mChicletList.begin(); it
 			!= mChicletList.end(); it++)
 	{
-		LLIMFloater* im_floater = LLFloaterReg::findTypedInstance<LLIMFloater>(
-				"impanel", (*it)->getSessionId());
+		// <FS:Ansariel> [FS communication UI]
+		//LLIMFloater* im_floater = LLFloaterReg::findTypedInstance<LLIMFloater>(
+		//		"impanel", (*it)->getSessionId());
+		FSFloaterIM* im_floater = LLFloaterReg::findTypedInstance<FSFloaterIM>(
+				"fs_impanel", (*it)->getSessionId());
+		// </FS:Ansariel> [FS communication UI]
 		if (im_floater != NULL && im_floater->getVisible()
 				&& !im_floater->isMinimized() && im_floater->isDocked())
 		{
