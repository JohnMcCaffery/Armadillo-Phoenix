diff --git a/Source/indra/newview/llagentwearablesfetch.cpp b/Source/indra/newview/llagentwearablesfetch.cpp
index 7810155..8f1a479 100644
--- a/Source/indra/newview/llagentwearablesfetch.cpp
+++ b/Source/indra/newview/llagentwearablesfetch.cpp
@@ -40,61 +40,52 @@
 #include "rlvhelper.h"
 // [/RLVa:KB]
 
-class LLOrderMyOutfitsOnDestroy: public LLInventoryCallback
+void order_my_outfits_cb()
 {
-public:
-	LLOrderMyOutfitsOnDestroy() {};
-
-	virtual ~LLOrderMyOutfitsOnDestroy()
+	if (!LLApp::isRunning())
 	{
-		if (!LLApp::isRunning())
-		{
-			llwarns << "called during shutdown, skipping" << llendl;
-			return;
-		}
+		llwarns << "called during shutdown, skipping" << llendl;
+		return;
+	}
 		
-		const LLUUID& my_outfits_id = gInventory.findCategoryUUIDForType(LLFolderType::FT_MY_OUTFITS);
-		if (my_outfits_id.isNull()) return;
+	const LLUUID& my_outfits_id = gInventory.findCategoryUUIDForType(LLFolderType::FT_MY_OUTFITS);
+	if (my_outfits_id.isNull()) return;
 
-		LLInventoryModel::cat_array_t* cats;
-		LLInventoryModel::item_array_t* items;
-		gInventory.getDirectDescendentsOf(my_outfits_id, cats, items);
-		if (!cats) return;
+	LLInventoryModel::cat_array_t* cats;
+	LLInventoryModel::item_array_t* items;
+	gInventory.getDirectDescendentsOf(my_outfits_id, cats, items);
+	if (!cats) return;
 
-		//My Outfits should at least contain saved initial outfit and one another outfit
-		if (cats->size() < 2)
-		{
-			llwarning("My Outfits category was not populated properly", 0);
-			return;
-		}
-
-		llinfos << "Starting updating My Outfits with wearables ordering information" << llendl;
+	//My Outfits should at least contain saved initial outfit and one another outfit
+	if (cats->size() < 2)
+	{
+		llwarning("My Outfits category was not populated properly", 0);
+		return;
+	}
 
-		for (LLInventoryModel::cat_array_t::iterator outfit_iter = cats->begin();
-			outfit_iter != cats->end(); ++outfit_iter)
-		{
-			const LLUUID& cat_id = (*outfit_iter)->getUUID();
-			if (cat_id.isNull()) continue;
+	llinfos << "Starting updating My Outfits with wearables ordering information" << llendl;
 
-			// saved initial outfit already contains wearables ordering information
-			if (cat_id == LLAppearanceMgr::getInstance()->getBaseOutfitUUID()) continue;
+	for (LLInventoryModel::cat_array_t::iterator outfit_iter = cats->begin();
+		 outfit_iter != cats->end(); ++outfit_iter)
+	{
+		const LLUUID& cat_id = (*outfit_iter)->getUUID();
+		if (cat_id.isNull()) continue;
 
-			LLAppearanceMgr::getInstance()->updateClothingOrderingInfo(cat_id);
-		}
+		// saved initial outfit already contains wearables ordering information
+		if (cat_id == LLAppearanceMgr::getInstance()->getBaseOutfitUUID()) continue;
 
-		llinfos << "Finished updating My Outfits with wearables ordering information" << llendl;
+		LLAppearanceMgr::getInstance()->updateClothingOrderingInfo(cat_id);
 	}
 
-	/* virtual */ void fire(const LLUUID& inv_item) {};
-};
-
+	llinfos << "Finished updating My Outfits with wearables ordering information" << llendl;
+}
 
 LLInitialWearablesFetch::LLInitialWearablesFetch(const LLUUID& cof_id) :
 	LLInventoryFetchDescendentsObserver(cof_id)
 {
 	if (isAgentAvatarValid())
 	{
-		gAgentAvatarp->getPhases().startPhase("initial_wearables_fetch");
+		gAgentAvatarp->startPhase("initial_wearables_fetch");
 		gAgentAvatarp->outputRezTiming("Initial wearables fetch started");
 	}
 }
@@ -118,10 +109,9 @@ void LLInitialWearablesFetch::done()
 	else
 		rlvCallbackTimerOnce(nDelay, boost::bind(&LLInitialWearablesFetch::processContents,this));
 // [/RLVa:KB]
-
 	if (isAgentAvatarValid())
 	{
-		gAgentAvatarp->getPhases().stopPhase("initial_wearables_fetch");
+		gAgentAvatarp->stopPhase("initial_wearables_fetch");
 		gAgentAvatarp->outputRezTiming("Initial wearables fetch done");
 	}
 }
@@ -637,7 +627,7 @@ void LLLibraryOutfitsFetch::contentsDone()
 	LLInventoryModel::cat_array_t cat_array;
 	LLInventoryModel::item_array_t wearable_array;
 	
-	LLPointer<LLOrderMyOutfitsOnDestroy> order_myoutfits_on_destroy = new LLOrderMyOutfitsOnDestroy;
+	LLPointer<LLInventoryCallback> order_myoutfits_on_destroy = new LLBoostFuncInventoryCallback(no_op_inventory_func, order_my_outfits_cb);
 
 	for (uuid_vec_t::const_iterator folder_iter = mImportedClothingFolders.begin();
 		 folder_iter != mImportedClothingFolders.end();
