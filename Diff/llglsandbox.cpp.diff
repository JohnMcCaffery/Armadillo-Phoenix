diff --git a/Source/indra/newview/llglsandbox.cpp b/Source/indra/newview/llglsandbox.cpp
index 3f30734..3a44c5f 100644
--- a/Source/indra/newview/llglsandbox.cpp
+++ b/Source/indra/newview/llglsandbox.cpp
@@ -84,9 +84,17 @@ void LLToolSelectRect::handleRectangleSelection(S32 x, S32 y, MASK mask)
 	}
 // [/RLVa:KB]
 
+	// <FS:Ansariel> Use faster LLCachedControls
+	static LLCachedControl<F32> maxSelectDistance(gSavedSettings, "MaxSelectDistance");
+	static LLCachedControl<bool> limitSelectDistance(gSavedSettings, "LimitSelectDistance");
+	// </FS:Ansariel>
+
 	LLVector3 av_pos = gAgent.getPositionAgent();
-	F32 select_dist_squared = gSavedSettings.getF32("MaxSelectDistance");
-	select_dist_squared = select_dist_squared * select_dist_squared;
+	// <FS:Ansariel> Use faster LLCachedControls
+	//F32 select_dist_squared = gSavedSettings.getF32("MaxSelectDistance");
+	//select_dist_squared = select_dist_squared * select_dist_squared;
+	F32 select_dist_squared = maxSelectDistance * maxSelectDistance;
+	// </FS:Ansariel>
 
 	BOOL deselect = (mask == MASK_CONTROL);
 	S32 left =	llmin(x, mDragStartX);
@@ -94,10 +102,10 @@ void LLToolSelectRect::handleRectangleSelection(S32 x, S32 y, MASK mask)
 	S32 top =	llmax(y, mDragStartY);
 	S32 bottom =llmin(y, mDragStartY);
 
-	left = llround((F32) left * LLUI::sGLScaleFactor.mV[VX]);
-	right = llround((F32) right * LLUI::sGLScaleFactor.mV[VX]);
-	top = llround((F32) top * LLUI::sGLScaleFactor.mV[VY]);
-	bottom = llround((F32) bottom * LLUI::sGLScaleFactor.mV[VY]);
+	left = llround((F32) left * LLUI::getScaleFactor().mV[VX]);
+	right = llround((F32) right * LLUI::getScaleFactor().mV[VX]);
+	top = llround((F32) top * LLUI::getScaleFactor().mV[VY]);
+	bottom = llround((F32) bottom * LLUI::getScaleFactor().mV[VY]);
 
 	F32 old_far_plane = LLViewerCamera::getInstance()->getFar();
 	F32 old_near_plane = LLViewerCamera::getInstance()->getNear();
@@ -133,15 +141,22 @@ void LLToolSelectRect::handleRectangleSelection(S32 x, S32 y, MASK mask)
 	gGL.matrixMode(LLRender::MM_PROJECTION);
 	gGL.pushMatrix();
 
-	BOOL limit_select_distance = gSavedSettings.getBOOL("LimitSelectDistance");
+	// <FS:Ansariel> Use faster LLCachedControls
+	//BOOL limit_select_distance = gSavedSettings.getBOOL("LimitSelectDistance");
+	BOOL limit_select_distance = (BOOL)limitSelectDistance;
+	// </FS:Ansariel>
 	if (limit_select_distance)
 	{
 		// ...select distance from control
 		LLVector3 relative_av_pos = av_pos;
 		relative_av_pos -= LLViewerCamera::getInstance()->getOrigin();
 
-		F32 new_far = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() + gSavedSettings.getF32("MaxSelectDistance");
-		F32 new_near = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() - gSavedSettings.getF32("MaxSelectDistance");
+		// <FS:Ansariel> Use faster LLCachedControls
+		//F32 new_far = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() + gSavedSettings.getF32("MaxSelectDistance");
+		//F32 new_near = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() - gSavedSettings.getF32("MaxSelectDistance");
+		F32 new_far = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() + maxSelectDistance;
+		F32 new_near = relative_av_pos * LLViewerCamera::getInstance()->getAtAxis() - maxSelectDistance;
+		// </FS:Ansariel>
 
 		new_near = llmax(new_near, 0.1f);
 
