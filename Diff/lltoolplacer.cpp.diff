diff --git a/Source/indra/newview/lltoolplacer.cpp b/Source/indra/newview/lltoolplacer.cpp
index 14cbf8b..5798345 100644
--- a/Source/indra/newview/lltoolplacer.cpp
+++ b/Source/indra/newview/lltoolplacer.cpp
@@ -71,6 +71,7 @@
 // [/RLVa:KB]
 #include "llparcel.h"
 #include "llviewerparcelmgr.h"
+#include "fscommon.h"
 #include "roles_constants.h"
 
 const LLVector3 DEFAULT_OBJECT_SCALE(0.5f, 0.5f, 0.5f);
@@ -86,11 +87,18 @@ LLToolPlacer::LLToolPlacer()
 BOOL LLToolPlacer::raycastForNewObjPos( S32 x, S32 y, LLViewerObject** hit_obj, S32* hit_face, 
 							 BOOL* b_hit_land, LLVector3* ray_start_region, LLVector3* ray_end_region, LLViewerRegion** region )
 {
-	F32 max_dist_from_camera = gSavedSettings.getF32( "MaxSelectDistance" ) - 1.f;
+	// <FS:Ansariel> Performance tweak and selection fix
+	static LLCachedControl<bool> limitSelectDistance(gSavedSettings, "LimitSelectDistance");
+	static LLCachedControl<F32> max_dist_from_camera(gSavedSettings, "MaxSelectDistance");
+	//F32 max_dist_from_camera = gSavedSettings.getF32( "MaxSelectDistance" ) - 1.f;
+	// </FS:Ansariel>
 
 	// Viewer-side pick to find the right sim to create the object on.  
 	// First find the surface the object will be created on.
-	LLPickInfo pick = gViewerWindow->pickImmediate(x, y, FALSE);
+//	LLPickInfo pick = gViewerWindow->pickImmediate(x, y, FALSE);
+// [SL:KB] - Patch: UI-PickRiggedAttachment | Checked: 2012-07-12 (Catznip-3.3)
+	LLPickInfo pick = gViewerWindow->pickImmediate(x, y, FALSE, FALSE);
+// [/SL:KB]
 	
 	// Note: use the frontmost non-flora version because (a) plants usually have lots of alpha and (b) pants' Havok
 	// representations (if any) are NOT the same as their viewer representation.
@@ -127,8 +135,12 @@ BOOL LLToolPlacer::raycastForNewObjPos( S32 x, S32 y, LLViewerObject** hit_obj,
 
 	// Make sure the surface isn't too far away.
 	LLVector3d ray_start_global = gAgentCamera.getCameraPositionGlobal();
-	F32 dist_to_surface_sq = (F32)((surface_pos_global - ray_start_global).magVecSquared());
-	if( dist_to_surface_sq > (max_dist_from_camera * max_dist_from_camera) )
+	// <FS:Ansariel> Performance tweak and selection fix
+	//F32 dist_to_surface_sq = (F32)((surface_pos_global - ray_start_global).magVecSquared());
+	//if( dist_to_surface_sq > (max_dist_from_camera * max_dist_from_camera) )
+	F32 dist_to_surface_sq = (F32)((surface_pos_global - gAgent.getPositionGlobal()).magVecSquared());
+	if(limitSelectDistance && dist_to_surface_sq > (max_dist_from_camera * max_dist_from_camera) )
+	// </FS:Ansariel>
 	{
 		return FALSE;
 	}
@@ -200,7 +212,7 @@ BOOL LLToolPlacer::addObject( LLPCode pcode, S32 x, S32 y, U8 use_physics )
 		return FALSE;
 	}
 
-	if (regionp->getRegionFlags() & REGION_FLAGS_SANDBOX)
+	if (regionp->getRegionFlag(REGION_FLAGS_SANDBOX))
 	{
 		//LLFirstUse::useSandbox();
 	}
@@ -472,6 +484,7 @@ BOOL LLToolPlacer::addObject( LLPCode pcode, S32 x, S32 y, U8 use_physics )
 	// Spawns a message, so must be after above send
 	if (create_selected)
 	{
+		FSCommon::sObjectAddMsg++;
 		LLSelectMgr::getInstance()->deselectAll();
 		gViewerWindow->getWindow()->incBusyCount();
 	}
@@ -535,7 +548,7 @@ BOOL LLToolPlacer::addDuplicate(S32 x, S32 y)
 										FALSE);				// select copy
 
 	if (regionp
-		&& (regionp->getRegionFlags() & REGION_FLAGS_SANDBOX))
+		&& (regionp->getRegionFlag(REGION_FLAGS_SANDBOX)))
 	{
 		//LLFirstUse::useSandbox();
 	}
