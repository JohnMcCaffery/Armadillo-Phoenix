diff --git a/Source/indra/newview/llviewerchat.cpp b/Source/indra/newview/llviewerchat.cpp
index 3bd613f..5df3c08 100644
--- a/Source/indra/newview/llviewerchat.cpp
+++ b/Source/indra/newview/llviewerchat.cpp
@@ -39,9 +39,9 @@
 #include "fskeywords.h"
 #include "lggcontactsets.h"
 #include "rlvhandler.h"
-#if LL_WINDOWS
-#include "growlmanager.h"
-#endif
+
+#include "growlmanager.h" // <FS:LO> Growl include
+
 
 // LLViewerChat
 LLViewerChat::font_change_signal_t LLViewerChat::sChatFontChangedSignal;
@@ -67,16 +67,21 @@ void LLViewerChat::getChatColor(const LLChat& chat, LLColor4& r_color, bool is_l
 				}
 				else
 				{
-					if(gAgentID == chat.mFromID)
-					{
-						r_color = LLUIColorTable::instance().getColor("UserChatColor");
-					}
-					else
-					{
+					// <FS:CR> FIRE-1061 - Color friends, lindens, muted, etc
+					// Handle "UserChatColor" through the colorizer
+					//if(gAgentID == chat.mFromID)
+					//{
+					//	r_color = LLUIColorTable::instance().getColor("UserChatColor");
+					//}
+					//else
+					//{
 						r_color = LLUIColorTable::instance().getColor("AgentChatColor");
-					}
+					//}
+					r_color = LGGContactSets::getInstance()->colorize(chat.mFromID, r_color, LGG_CS_CHAT);
+					// </FS:CR>
+
 					//color based on contact sets prefs
-					if(LGGContactSets::getInstance()->hasFriendColorThatShouldShow(chat.mFromID,TRUE))
+					if(LGGContactSets::getInstance()->hasFriendColorThatShouldShow(chat.mFromID, LGG_CS_CHAT))
 					{
 						r_color = LGGContactSets::getInstance()->getFriendColor(chat.mFromID);
 					}
@@ -98,6 +103,19 @@ void LLViewerChat::getChatColor(const LLChat& chat, LLColor4& r_color, bool is_l
 				else if ( chat.mChatType == CHAT_TYPE_IM )
 				{
 					r_color = LLUIColorTable::instance().getColor("ObjectIMColor");
+					// <FS:LO> FIRE-5889: Object IM's Not Triggering Growl Notifications
+					std::string msg = chat.mFromName;
+					std::string prefix = chat.mText.substr(0, 4);
+					if(prefix == "/me " || prefix == "/me'")
+					{
+						msg = msg + chat.mText.substr(3);
+					}
+					else
+					{
+						msg = msg + ": " + chat.mText;
+					}
+					gGrowlManager->notify(chat.mFromName, msg, GROWL_IM_MESSAGE_TYPE);
+					// </FS:LO>
 				}
 				else
 				{
@@ -121,9 +139,9 @@ void LLViewerChat::getChatColor(const LLChat& chat, LLColor4& r_color, bool is_l
 			{
 				msg = msg + ": " + chat.mText;
 			}
-#if LL_WINDOWS
+			
 			gGrowlManager->notify("Keyword Alert", msg, "Keyword Alert");
-#endif
+			
 			static LLCachedControl<bool> sFSKeywordChangeColor(gSavedPerAccountSettings, "FSKeywordChangeColor");
 			if (sFSKeywordChangeColor)
 			{
@@ -293,6 +311,11 @@ std::string LLViewerChat::getSenderSLURL(const LLChat& chat, const LLSD& args)
 	case CHAT_SOURCE_OBJECT:
 		return getObjectImSLURL(chat, args);
 
+	// <FS:Ansariel> Stop spamming the log when processing system messages
+	case CHAT_SOURCE_SYSTEM:
+		return LLStringUtil::null;
+	// </FS:Ansariel>
+
 	default:
 		llwarns << "Getting SLURL for an unsupported sender type: " << chat.mSourceType << llendl;
 	}
